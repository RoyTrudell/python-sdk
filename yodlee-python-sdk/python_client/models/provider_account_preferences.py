# coding: utf-8

"""
    Yodlee Core APIs

    This file describes the Yodlee Platform APIs, using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. You can generate a client SDK for Python, Java, javascript, PHP or other languages according to your development needs. For more details about our APIs themselves, please refer to https://developer.yodlee.com/Yodlee_API/.  # noqa: E501

    OpenAPI spec version: 1.1.0
    Contact: developer@yodlee.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class ProviderAccountPreferences(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'is_data_extracts_enabled': 'bool',
        'linked_provider_account_id': 'int',
        'is_auto_refresh_enabled': 'bool'
    }

    attribute_map = {
        'is_data_extracts_enabled': 'isDataExtractsEnabled',
        'linked_provider_account_id': 'linkedProviderAccountId',
        'is_auto_refresh_enabled': 'isAutoRefreshEnabled'
    }

    def __init__(self, is_data_extracts_enabled=None, linked_provider_account_id=None, is_auto_refresh_enabled=None):  # noqa: E501
        """ProviderAccountPreferences - a model defined in Swagger"""  # noqa: E501

        self._is_data_extracts_enabled = None
        self._linked_provider_account_id = None
        self._is_auto_refresh_enabled = None
        self.discriminator = None

        if is_data_extracts_enabled is not None:
            self.is_data_extracts_enabled = is_data_extracts_enabled
        if linked_provider_account_id is not None:
            self.linked_provider_account_id = linked_provider_account_id
        if is_auto_refresh_enabled is not None:
            self.is_auto_refresh_enabled = is_auto_refresh_enabled

    @property
    def is_data_extracts_enabled(self):
        """Gets the is_data_extracts_enabled of this ProviderAccountPreferences.  # noqa: E501

        Indicates if the updates to the provider account should be part of the data extracts event notification or the data extract data retrieval service.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts?include=preferences</li><li>GET providerAccounts/{providerAccountId}?include=preferences</li></ul>  # noqa: E501

        :return: The is_data_extracts_enabled of this ProviderAccountPreferences.  # noqa: E501
        :rtype: bool
        """
        return self._is_data_extracts_enabled

    @is_data_extracts_enabled.setter
    def is_data_extracts_enabled(self, is_data_extracts_enabled):
        """Sets the is_data_extracts_enabled of this ProviderAccountPreferences.

        Indicates if the updates to the provider account should be part of the data extracts event notification or the data extract data retrieval service.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts?include=preferences</li><li>GET providerAccounts/{providerAccountId}?include=preferences</li></ul>  # noqa: E501

        :param is_data_extracts_enabled: The is_data_extracts_enabled of this ProviderAccountPreferences.  # noqa: E501
        :type: bool
        """

        self._is_data_extracts_enabled = is_data_extracts_enabled

    @property
    def linked_provider_account_id(self):
        """Gets the linked_provider_account_id of this ProviderAccountPreferences.  # noqa: E501

        LinkedproviderAccountd is a providerAccountId linked by the user to the primary provider account. <br>LinkedProviderAccountId and the providerAccountId belongs to the same institution.<br><br><b>Endpoints</b>:<ul><li>POST Provider Account</li><li>PUT Provider Account</li><li>GET Provider Accounts</li></ul>  # noqa: E501

        :return: The linked_provider_account_id of this ProviderAccountPreferences.  # noqa: E501
        :rtype: int
        """
        return self._linked_provider_account_id

    @linked_provider_account_id.setter
    def linked_provider_account_id(self, linked_provider_account_id):
        """Sets the linked_provider_account_id of this ProviderAccountPreferences.

        LinkedproviderAccountd is a providerAccountId linked by the user to the primary provider account. <br>LinkedProviderAccountId and the providerAccountId belongs to the same institution.<br><br><b>Endpoints</b>:<ul><li>POST Provider Account</li><li>PUT Provider Account</li><li>GET Provider Accounts</li></ul>  # noqa: E501

        :param linked_provider_account_id: The linked_provider_account_id of this ProviderAccountPreferences.  # noqa: E501
        :type: int
        """

        self._linked_provider_account_id = linked_provider_account_id

    @property
    def is_auto_refresh_enabled(self):
        """Gets the is_auto_refresh_enabled of this ProviderAccountPreferences.  # noqa: E501

        Indicates if auto-refreshes have to be triggered for the provider account.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts?include=preferences</li><li>GET providerAccounts/{providerAccountId}?include=preferences</li></ul>  # noqa: E501

        :return: The is_auto_refresh_enabled of this ProviderAccountPreferences.  # noqa: E501
        :rtype: bool
        """
        return self._is_auto_refresh_enabled

    @is_auto_refresh_enabled.setter
    def is_auto_refresh_enabled(self, is_auto_refresh_enabled):
        """Sets the is_auto_refresh_enabled of this ProviderAccountPreferences.

        Indicates if auto-refreshes have to be triggered for the provider account.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts?include=preferences</li><li>GET providerAccounts/{providerAccountId}?include=preferences</li></ul>  # noqa: E501

        :param is_auto_refresh_enabled: The is_auto_refresh_enabled of this ProviderAccountPreferences.  # noqa: E501
        :type: bool
        """

        self._is_auto_refresh_enabled = is_auto_refresh_enabled

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ProviderAccountPreferences, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ProviderAccountPreferences):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
