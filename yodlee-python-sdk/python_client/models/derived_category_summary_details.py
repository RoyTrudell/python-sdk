# coding: utf-8

"""
    Yodlee Core APIs

    This file describes the Yodlee Platform APIs, using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. You can generate a client SDK for Python, Java, javascript, PHP or other languages according to your development needs. For more details about our APIs themselves, please refer to https://developer.yodlee.com/Yodlee_API/.  # noqa: E501

    OpenAPI spec version: 1.1.0
    Contact: developer@yodlee.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from python_client.models.money import Money  # noqa: F401,E501


class DerivedCategorySummaryDetails(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        '_date': 'str',
        'credit_total': 'Money',
        'debit_total': 'Money'
    }

    attribute_map = {
        '_date': 'date',
        'credit_total': 'creditTotal',
        'debit_total': 'debitTotal'
    }

    def __init__(self, _date=None, credit_total=None, debit_total=None):  # noqa: E501
        """DerivedCategorySummaryDetails - a model defined in Swagger"""  # noqa: E501

        self.__date = None
        self._credit_total = None
        self._debit_total = None
        self.discriminator = None

        if _date is not None:
            self._date = _date
        if credit_total is not None:
            self.credit_total = credit_total
        if debit_total is not None:
            self.debit_total = debit_total

    @property
    def _date(self):
        """Gets the _date of this DerivedCategorySummaryDetails.  # noqa: E501

        Date on which the credit and debit transactions had occured.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>  # noqa: E501

        :return: The _date of this DerivedCategorySummaryDetails.  # noqa: E501
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this DerivedCategorySummaryDetails.

        Date on which the credit and debit transactions had occured.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>  # noqa: E501

        :param _date: The _date of this DerivedCategorySummaryDetails.  # noqa: E501
        :type: str
        """

        self.__date = _date

    @property
    def credit_total(self):
        """Gets the credit_total of this DerivedCategorySummaryDetails.  # noqa: E501

        Total of credit transaction amounts that had occured on the date.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>  # noqa: E501

        :return: The credit_total of this DerivedCategorySummaryDetails.  # noqa: E501
        :rtype: Money
        """
        return self._credit_total

    @credit_total.setter
    def credit_total(self, credit_total):
        """Sets the credit_total of this DerivedCategorySummaryDetails.

        Total of credit transaction amounts that had occured on the date.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>  # noqa: E501

        :param credit_total: The credit_total of this DerivedCategorySummaryDetails.  # noqa: E501
        :type: Money
        """

        self._credit_total = credit_total

    @property
    def debit_total(self):
        """Gets the debit_total of this DerivedCategorySummaryDetails.  # noqa: E501

        Total of debit transaction amounts that had occured on the date.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>  # noqa: E501

        :return: The debit_total of this DerivedCategorySummaryDetails.  # noqa: E501
        :rtype: Money
        """
        return self._debit_total

    @debit_total.setter
    def debit_total(self, debit_total):
        """Sets the debit_total of this DerivedCategorySummaryDetails.

        Total of debit transaction amounts that had occured on the date.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>  # noqa: E501

        :param debit_total: The debit_total of this DerivedCategorySummaryDetails.  # noqa: E501
        :type: Money
        """

        self._debit_total = debit_total

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DerivedCategorySummaryDetails, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DerivedCategorySummaryDetails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
